"""
Список вещей для похода - Все варианты
На вход подается словарь со списком вещей для похода в качестве ключа и их массой max_weight в качестве значения.
Определите какие вещи влезут в рюкзак backpack передав его максимальную грузоподъёмность.
В переменную backpack сохраните словарь {предмет:вес} с вещами в рюкзаке.
В переменную result выведите список, содержащий все возможные варианты backpack. Напечатайте переменную result.
*Верните все возможные варианты комплектации рюкзака.
*Пример*
На входе:
items = {
    "ключи": 0.3,
    "кошелек": 0.2,
    "телефон": 0.5,
    "зажигалка": 0.1
}
max_weight = 1.0

На выходе:
[{'ключи': 0.3},
 {'кошелек': 0.2},
 {'ключи': 0.3, 'кошелек': 0.2},
 {'телефон': 0.5},
 {'ключи': 0.3, 'телефон': 0.5},
 {'кошелек': 0.2, 'телефон': 0.5},
 {'ключи': 0.3, 'кошелек': 0.2, 'телефон': 0.5},
 {'зажигалка': 0.1},
 {'зажигалка': 0.1, 'ключи': 0.3},
 {'зажигалка': 0.1, 'кошелек': 0.2},
 {'зажигалка': 0.1, 'ключи': 0.3, 'кошелек': 0.2},
 {'зажигалка': 0.1, 'телефон': 0.5},
 {'зажигалка': 0.1, 'ключи': 0.3, 'телефон': 0.5},
 {'зажигалка': 0.1, 'кошелек': 0.2, 'телефон': 0.5},
 {'ключи': 0.3, 'кошелек': 0.2, 'телефон': 0.5}]
"""

from collections import namedtuple
from itertools import *

Item = namedtuple('Item', ['name', 'mass', 'price'])

items = [Item('Обручальное кольцо', 7, 49_000),
         Item('Мобильный телефон', 200, 110_000),
         Item('Ноутбук', 2000, 150_000),
         Item('Ручка Паркер', 20, 37_000),
         Item('Статуэтка Оскар', 4000, 28_000),
         Item('Наушники', 150, 11_000),
         Item('Гитара', 1500, 32_000),
         Item('Золотая монета', 8, 140_000),
         Item('Фотоаппарат', 720, 79_000),
         Item('Лимитированные кроссовки', 300, 80_000)]

max_weight = 2000
backpacks = []
sorted_result = []
for i in range(2**len(items)):
    backpack = {}
    weight = 0
    for j, item in enumerate(items):
        if i & (1 << j):
            if weight + items[item] <= max_weight:
                backpack[item] = items[item]
                weight += items[item]
            else:
                break
    backpacks.append(backpack)

full_result = [backpack for backpack in backpacks if backpack]
result = []
for item in full_result:
    if item not in result:
        result.append(item)
print(result)
